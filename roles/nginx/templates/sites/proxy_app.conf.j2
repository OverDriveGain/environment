# roles/nginx/templates/sites/proxy_app.conf.j2
{% for domain in site_config.domains %}
# HTTP server for {{ domain }} - redirect to HTTPS
server {
    listen 80;
    server_name {{ domain }};

    {% if site_config.ssl_enabled | default(false) %}
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server for {{ domain }}
server {
    listen 443 ssl http2;
    server_name {{ domain }};

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/{{ site_name }}/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/{{ site_name }}/key.pem;
    include /etc/nginx/includes/ssl_common.conf;
    {% else %}
    # HTTP only configuration
    {% endif %}

    # Logging
    access_log /var/log/nginx/{{ site_name }}_access.log main;
    error_log /var/log/nginx/{{ site_name }}_error.log;
    {% if site_config.debug_logging | default(false) %}
    error_log /var/log/nginx/{{ site_name }}_debug.log debug;
    {% endif %}

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    {% if site_config.websocket_paths is defined %}
    # WebSocket specific locations
    {% for path in site_config.websocket_paths %}
    location {{ path }} {
        proxy_pass http://127.0.0.1:{{ site_config.port }};

        # WebSocket specific headers and timeouts
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        # WebSocket timeouts (longer than regular HTTP)
        proxy_connect_timeout 60s;
        proxy_send_timeout 86400s;
        proxy_read_timeout 86400s;
    }
    {% endfor %}
    {% endif %}

    # Main proxy location
    location / {
        proxy_pass http://127.0.0.1:{{ site_config.port }};

        {% if site_config.websocket_support | default(false) %}
        # WebSocket support for main location - custom headers and timeouts
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;

        # WebSocket timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 86400s;
        proxy_read_timeout 86400s;
        {% else %}
        # Regular HTTP proxy - use include file
        include /etc/nginx/includes/proxy_headers.conf;
        {% endif %}

        # Handle large file uploads
        client_max_body_size 100m;
        client_body_timeout 120s;

        # Custom proxy headers if defined
        {% if site_config.nginx_proxy_headers is defined %}
        {% for header, value in site_config.nginx_proxy_headers.items() %}
        proxy_set_header {{ header | title }} {{ value }};
        {% endfor %}
        {% endif %}
    }

    # Health check endpoint if available
    location /health {
        proxy_pass http://127.0.0.1:{{ site_config.port }}/health;
        include /etc/nginx/includes/proxy_headers.conf;
        access_log off;
    }

    # API endpoints with different rate limiting
    location /api/ {
        limit_req zone=general burst=10 nodelay;
        proxy_pass http://127.0.0.1:{{ site_config.port }};
        include /etc/nginx/includes/proxy_headers.conf;

        {% if site_config.websocket_support | default(false) %}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        {% endif %}
    }

    # Deny access to sensitive files
    location ~ /\.(env|git|htaccess) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security headers
    {% include 'includes/security_headers.conf.j2' %}
}
{% endfor %}

{% if site_config.websocket_support | default(false) %}
# WebSocket connection upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
{% endif %}