# roles/nginx/templates/sites/node_app.conf.j2
{% for domain in site_config.domains %}
# HTTP server for {{ domain }} - redirect to HTTPS
server {
    listen 80;
    server_name {{ domain }};
    {% set redirect_domain = domain %}
    {% include 'includes/redirect_www_to_non_www.j2' %}
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        try_files $uri =404;
    }
    {% if site_config.ssl_enabled | default(false) %}
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server for {{ domain }}
server {
    listen 443 ssl http2;
    server_name {{ domain }};
    {% set redirect_domain = domain %}
    {% include 'includes/redirect_www_to_non_www.j2' %}
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/{{ site_name }}/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/{{ site_name }}/key.pem;
    include /etc/nginx/includes/ssl_common.conf;
    {% else %}
    # HTTP only configuration
    {% endif %}

    # Logging
    access_log /var/log/nginx/{{ site_name }}_access.log main;
    error_log /var/log/nginx/{{ site_name }}_error.log;

    # Rate limiting
    #limit_req zone=general burst=20 nodelay;

    # Main proxy location
    location / {
        proxy_pass http://127.0.0.1:{{ site_config.port }};
        include /etc/nginx/includes/proxy_headers.conf;

        # Handle large file uploads
        client_max_body_size 100m;
        client_body_timeout 120s;

        # Custom proxy headers if defined
        {% if site_config.nginx_proxy_headers is defined %}
        {% for header, value in site_config.nginx_proxy_headers.items() %}
        proxy_set_header {{ header | title }} {{ value }};
        {% endfor %}
        {% endif %}
    }

    # Handle static assets if they exist
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|pdf)$ {
        proxy_pass http://127.0.0.1:{{ site_config.port }};
        include /etc/nginx/includes/proxy_headers.conf;

        # Cache static files
#        expires 1h;
#        add_header Cache-Control "public";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:{{ site_config.port }}/health;
        include /etc/nginx/includes/proxy_headers.conf;
        access_log off;
    }

    # Deny access to sensitive files
    location ~ /\.(env|git|htaccess) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security headers
    {% include 'includes/security_headers.conf.j2' %}
}
{% endfor %}