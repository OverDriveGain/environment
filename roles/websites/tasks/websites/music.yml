- name: Set the facts
  set_fact:
    app_secret: "{{ websites.music.app_secret }}"
    music_path: "{{ websites.music.music_path }}"
    container_name: "{{ websites.music.container_name }}"
    admin_username: "{{ websites.music.admin_username }}"
    admin_password: "{{ websites.music.admin_password }}"
    port: "{{ websites.music.port }}"

  delegate_to: desktop

- name: Check if Docker is already installed
  command: dpkg-query -W docker.io
  register: docker_check
  failed_when: docker_check.rc > 1
  changed_when: docker_check.rc == 1
  delegate_to: desktop
  become: yes

- name: Update apt cache
  apt:
    update_cache: yes
  delegate_to: desktop
  become: yes
  when: docker_check.rc == 1

- name: Install Docker
  apt:
    name: docker.io
    state: present
  delegate_to: desktop
  become: yes
  when: docker_check.rc == 1
  async: 600
  poll: 10

- name: Ensure the Docker container is stopped
  community.docker.docker_container:
    name: "{{ container_name }}"
    state: stopped
  ignore_errors: true
  delegate_to: desktop

- name: Create Docker volume
  docker_volume:
    name: leafplayer-storage
    state: present
  delegate_to: desktop

- name: Run Leafplayer container
  delegate_to: desktop
  docker_container:
    name: "{{ container_name }}"
    image: paulschwoerer/leafplayer
    state: started
    restart_policy: unless-stopped
    env:
      APP_SECRET: "{{ app_secret }}"
    volumes:
      - "{{ music_path }}:/music:ro"
      - "leafplayer-storage:/var/lib/leafplayer"
    ports:
      - "{{ port }}:3000"

- name: Wait for container to be ready after a delay of 10 seconds
  wait_for:
    port: "{{ port }}"
    delay: 10
  delegate_to: desktop

- name: Create admin user
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: node main.js users:add --username {{ admin_username }} --password {{ admin_password }}
  register: result
  ignore_errors: true
  delegate_to: desktop

- name: print result
  debug:
    var: result.stdout
  delegate_to: desktop
