- name: Install and configure SSL certificates
  set_fact:
    certbot_auto_renew: yes
    lets_encrypt_staging: no

- name: Install required packages
  apt:
    name:
      - certbot
      - python3-certbot
    state: present
    update_cache: yes
  become: yes

- name: Create webroot directory for Let's Encrypt challenges
  file:
    path: /var/www/letsencrypt
    state: directory
    mode: '0755'
  become: yes


- name: Create webroot directory for Let's Encrypt challenges
  file:
    path: /var/www/letsencrypt
    state: directory
    mode: '0755'
  become: yes

- name: Create SSL directories for each website in mounted directory
  file:
    path: "{{ nginx_host_ssl_path }}/{{ item.key }}"
    state: directory
    mode: '0755'
  loop: "{{ websites | dict2items }}"
  when: item.value.ssl_enabled | default(false)
  become: yes

- name: Generate certificates for each website using webroot
  command: >
    certbot certonly --webroot
    --webroot-path /var/www/letsencrypt
    --email {{ item.value.ssl_email }}
    --cert-name {{ item.value.domains[0] }}
    {% for domain in item.value.domains %}
    -d {{ domain }}
    {% endfor %}
    --agree-tos
    --non-interactive
    --expand
    --keep-until-expiring
    {% if lets_encrypt_staging %}
    --staging
    {% endif %}
  become: yes
  loop: "{{ websites | dict2items }}"
  register: cert_generation
  when: item.value.ssl_enabled | default(false)

- name: Display certificate generation output
  debug:
    var: cert_generation

- name: Make certificates readable
  file:
    path: "/etc/letsencrypt"
    mode: "0755"
    recurse: yes
  become: yes

- name: Copy fullchain.pem certificates to nginx directory
  copy:
    src: "/etc/letsencrypt/live/{{ item.value.domains[0] }}/fullchain.pem"
    dest: "{{ nginx_host_ssl_path }}/{{ item.key }}/cert.pem"
    remote_src: yes
    mode: "0644"
    follow: yes
  loop: "{{ websites | dict2items }}"
  become: yes
  when: item.value.ssl_enabled | default(false)

- name: Copy privkey.pem certificates to nginx directory
  copy:
    src: "/etc/letsencrypt/live/{{ item.value.domains[0] }}/privkey.pem"
    dest: "{{ nginx_host_ssl_path }}/{{ item.key }}/key.pem"
    remote_src: yes
    mode: "0644"
    follow: yes
  loop: "{{ websites | dict2items }}"
  when: item.value.ssl_enabled | default(false)
  become: yes

- name: Create certificate renewal script
  template:
    src: templates/certbot-renewal.sh.j2
    dest: /usr/local/bin/certbot-renewal.sh
    mode: '0755'
  become: yes

- name: Set up automatic renewal with webroot
  cron:
    name: "Certbot Renewal"
    minute: "0"
    hour: "0"
    day: "12"
    job: "/usr/local/bin/certbot-renewal.sh >> /var/log/certbot-renewal.log 2>&1"
  when: certbot_auto_renew

- name: Verify certificates
  command: >
    certbot certificates
  become: yes
  register: cert_status
  changed_when: false

- name: Display certificate status
  debug:
    var: cert_status.stdout_lines
