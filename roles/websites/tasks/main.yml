- name: Get list of website configuration files
  ansible.builtin.find:
    paths: "{{ role_path }}/tasks/websites"
    patterns: "*.yml"
  register: website_files
  delegate_to: localhost

- name: Display found website configurations
  ansible.builtin.debug:
    msg: "Found website configuration: {{ item.path | basename }}"
  loop: "{{ website_files.files }}"

- name: Ensure websites_cloud_dir directory exists
  ansible.builtin.file:
    path: "{{ websites_cloud_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ host_username }}"
    group: "{{ host_username }}"
  become: no
  register: host_root_creation

- name: Ensure websites_dist_dir directory exists
  ansible.builtin.file:
    path: "{{ websites_dist_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ host_username }}"
    group: "{{ host_username }}"
  become: no

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.ssh"
    state: directory
    mode: '0700'

- name: Add GitHub to known hosts
  ansible.builtin.known_hosts:
    name: "github.com"
    key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    state: present

- name: Test GitHub SSH connection
  ansible.builtin.command: ssh -T git@github.com
  register: github_test
  ignore_errors: yes
  changed_when: false

- name: Show GitHub connection test result
  ansible.builtin.debug:
    msg: "GitHub connection test: {{ github_test.stderr if github_test.stderr is defined else github_test.stdout }}"

- name: Include all website tasks or parse from -e parameter
  ansible.builtin.include_tasks:
    apply:
      tags: 'website'
    file: "websites/{{ item.path | basename }}"
  loop: "{{ website_files.files }}"
  tags: 'website'
  vars:
    website: "{{ item.path | basename | regex_replace('\\.yml$', '') }}"
  when: >
    target_website is not defined or 
    (target_website == (item.path | basename | regex_replace('\\.yml$', '')))

- name: Include SSL tasks
  import_tasks: ssl.yml
  tags: ["websites:ssl"]
  when: nossl is not defined