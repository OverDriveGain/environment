- name: Check if Docker is installed
  ansible.builtin.command: docker --version
  register: docker_check
  ignore_errors: true
  changed_when: false

- name: Debug Docker version if installed
  ansible.builtin.debug:
    msg: "No need to install Docker. Currently installed version is: {{ docker_check.stdout }}"
  when: docker_check.rc == 0

- name: Install Docker if not installed
  block:
    # ... previous Docker installation tasks ...
    - name: Set os release *fix for mint wilma only
      shell: '. /etc/os-release && echo $VERSION_CODENAME'
      register: os_version_codename

    - name: Set VARIABLE based on OS for above function version
      set_fact:
        LSB_RELEASE: "{{ 'noble' if os_version_codename.stdout == 'wilma' else os_version_codename.stdout }}"
    - name: Debug the VARIABLE
      debug:
        msg: "The value of LSB_RELEASE is {{ LSB_RELEASE }}"

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dependencies for Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        validate_certs: no
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ LSB_RELEASE }} stable"
        state: present

    - name: Remove conflicting containerd packages
      apt:
        name:
          - containerd
          - containerd.io
        state: absent
      ignore_errors: yes

    - name: Install Docker
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create docker group if it doesn't exist
      ansible.builtin.group:
        name: docker
        state: present
      become: yes

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user | default(ansible_env.USER) }}"
        groups: docker
        append: yes
      become: yes

    - name: Fix Docker socket permissions
      ansible.builtin.file:
        path: /var/run/docker.sock
        mode: '0666'
        group: docker
      become: yes

    - name: Ensure Docker directory permissions
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        group: docker
        recurse: yes
      become: yes
      loop:
        - /var/run/docker
        - /var/lib/docker

    - name: Restart Docker service
      ansible.builtin.service:
        name: docker
        state: restarted
      become: yes

    - name: Force group membership update without logout
      ansible.builtin.shell: sudo chmod 666 /var/run/docker.sock
      become: yes

    - name: Reset SSH connection to apply new group
      ansible.builtin.meta: reset_connection

    - name: Wait for Docker socket to be accessible
      ansible.builtin.wait_for:
        path: /var/run/docker.sock
        timeout: 30

  when: docker_check.rc != 0

- name: Display Docker setup completion message
  ansible.builtin.debug:
    msg: |
      Docker setup is complete. 
      If you still see permission errors, try these manual steps:
      1. Log out and log back in, or
      2. Run these commands:
         sudo chmod 666 /var/run/docker.sock
         newgrp docker