- name: Set the port and username for localhost
  set_fact:
    docker_image_name: "{{ websites[website].docker_image_name }}"
    repo_url: "{{ websites[website].repo_url }}"
    root_name: "{{ websites[website].root_name }}"
    in_port: "{{ websites[website].in_port }}"
    ex_port: "{{ websites[website].ex_port }}"
    backend_port: "{{ websites[website].backend_port }}"
    root_dir: "{{ websites_cloud_dir }}/{{ websites[website].root_name }}"
    bin_dir: "{{ websites_cloud_dir }}/{{ websites[website].root_name }}/{{ websites[website].bin_dir }}"

- name: Ensure storage_meta directory exists
  ansible.builtin.file:
    path: "{{ websites_cloud_dir }}"
    state: directory

- name: Clone the repository
  ansible.builtin.git:
    repo: "{{ repo_url }}"
    dest: "{{ websites_cloud_dir }}/{{ root_name }}"
    update: yes
    force: yes

- name: Ensure the Docker container is stopped
  community.docker.docker_container:
    name: "{{ docker_image_name }}"
    state: stopped
  ignore_errors: true

- name: Create Docker container with Apache and Node.js
  community.docker.docker_container:
    name: "{{ docker_image_name }}"
    image: "bitnami/apache-node:18"
    ports:
      - "{{ ex_port }}:80"
    volumes:
      - "{{ root_dir }}:/app"
      - "./apache.conf:/bitnami/apache/conf/vhosts/myapp.conf"
    environment:
      NODE_ENV: "production"
    working_dir: "/app"
    command: >
      /bin/bash -c "
      npm install &&
      node app.js --port={{ backend_port }} &
      apache2ctl -D FOREGROUND
      "
    state: started

- name: Wait for services to start
  ansible.builtin.wait_for:
    port: "{{ ex_port }}"
    timeout: 30

- name: Print completion message
  ansible.builtin.debug:
    msg: "Docker container {{ docker_image_name }} is running with Apache proxying to Node.js backend."
